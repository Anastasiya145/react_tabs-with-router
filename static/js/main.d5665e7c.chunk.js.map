{"version":3,"sources":["components/PageNavLink.tsx","components/NavBar.tsx","components/TabsPage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","NavBar","tabs","id","title","content","TabsPage","useState","selectedTab","setSelectedTab","tabId","useParams","useEffect","currentTab","find","tab","map","onClick","onSelectTab","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"gPASaA,EAAyB,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACpC,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cACtC,CAAE,YAAaD,KAHnB,SAKGF,KCZQI,EAAa,kBACxB,qBACEH,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,KAAK,SACzB,cAAC,EAAD,CAAaD,GAAG,QAAQC,KAAK,iB,cCN/BK,EAAc,CAClB,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BC,EAAc,WACzB,MAAsCC,mBAAqB,MAA3D,mBAAOC,EAAP,KAAoBC,EAApB,KACQC,EAAUC,cAAVD,MAERE,qBAAU,WACR,GAAKF,EAAL,CAIA,IAAMG,EAAaX,EAAKY,MAAK,SAAAC,GAAG,OAAIA,EAAIZ,KAAOO,KAE/CD,EAAeI,GAAc,SAC5B,IAMH,OACE,qCACE,oBAAIf,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGI,EAAKc,KAAI,SAAAD,GAAG,OACX,oBACE,UAAQ,MACRjB,UAAWE,IAAW,CACpB,YAAaU,IAAUK,EAAIZ,KAH/B,SAME,cAAC,IAAD,CACEP,GAAE,gBAAWmB,EAAIZ,IACjBc,QAAS,kBAnBH,SAACF,GACnBN,EAAeM,GAkBYG,CAAYH,IAF7B,SAIGA,EAAIX,iBAOf,qBAAKN,UAAU,QAAQ,UAAQ,aAA/B,SACIU,GAAeE,EAAhB,OAAyBF,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAaH,QAAU,4BC/C5Cc,EAAM,kBACjB,qCAEE,cAAC,EAAD,IAEA,qBAAKrB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsB,KAAK,IAAIC,QAAS,oBAAIvB,UAAU,QAAd,yBACzB,cAAC,IAAD,CAAOsB,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUzB,GAAG,QAC1C,eAAC,IAAD,CAAOwB,KAAK,QAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAEhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,oBAAIvB,UAAU,QAAd,yCCjBnCyB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d5665e7c.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { FC } from 'react';\n\nexport type Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item',\n      { 'is-active': isActive })}\n  >\n    {text}\n  </NavLink>\n);\n","import { FC } from 'react';\nimport { PageNavLink } from './PageNavLink';\n\nexport const NavBar: FC = () => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/tabs\" text=\"Tabs\" />\n      </div>\n    </div>\n  </nav>\n);\n","import classNames from 'classnames';\nimport { FC, useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage:FC = () => {\n  const [selectedTab, setSelectedTab] = useState<Tab | null>(null);\n  const { tabId } = useParams();\n\n  useEffect(() => {\n    if (!tabId) {\n      return;\n    }\n\n    const currentTab = tabs.find(tab => tab.id === tabId);\n\n    setSelectedTab(currentTab || null);\n  }, []);\n\n  const onSelectTab = (tab: Tab) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              className={classNames({\n                'is-active': tabId === tab.id,\n              })}\n            >\n              <Link\n                to={`/tabs/${tab.id}`}\n                onClick={() => onSelectTab(tab)}\n              >\n                {tab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {(selectedTab && tabId) ? selectedTab?.content : 'Please select a tab' }\n      </div>\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { NavBar } from './components/NavBar';\nimport { TabsPage } from './components/TabsPage';\n\nexport const App = () => (\n  <>\n    {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n    <NavBar />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n          <Route path=\"/tabs\">\n            <Route index element={<TabsPage />} />\n            <Route path=\":tabId\" element={<TabsPage />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}